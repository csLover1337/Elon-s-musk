using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace IQPuzzleProVer2
{
    public class MapBuilder
    {

        List<PuzzlePiece> puzzleList;
        List<PuzzlePiece> inventoryPuzzlePieces;
        int levelNumber;
        Map levelMap;
        int score;
        List<Hint> hints;


        public MapBuilder(int levelNumber)
        {
            this.levelNumber = levelNumber;
            score = 0;



            if (levelNumber == 1)
            {
                hints = null;
                puzzleList = new List<PuzzlePiece>();
                inventoryPuzzlePieces = new List<PuzzlePiece>();
                PuzzlePiece piece11;
                piece11 = new PuzzlePiece(11, 11, false);
                puzzleList.Add(piece11);

                PuzzlePiece piece7;
                piece7 = new PuzzlePiece(7, 7, false);
                puzzleList.Add(piece7);

                PuzzlePiece piece9;
                piece9 = new PuzzlePiece(9, 9, false);
                puzzleList.Add(piece9);

                PuzzlePiece piece4;
                piece4 = new PuzzlePiece(4, 4, false);
                puzzleList.Add(piece4);

                PuzzlePiece piece1;
                piece1 = new PuzzlePiece(1, 1, false);
                puzzleList.Add(piece1);

                PuzzlePiece piece8;
                piece8 = new PuzzlePiece(8, 8, false);
                puzzleList.Add(piece8);

                PuzzlePiece piece2;
                piece2 = new PuzzlePiece(2, 2, false);
                puzzleList.Add(piece2);

                foreach (PuzzlePiece item in puzzleList)
                {
                    item.setIsInInventory(false);
                }

                levelMap = new Map(hints, puzzleList);
                levelMap.mapArray[0, 0] = 11;
                levelMap.mapArray[0, 1] = 7;
                levelMap.mapArray[0, 2] = 7;
                levelMap.mapArray[0, 3] = 7;
                levelMap.mapArray[0, 4] = 7;
                levelMap.mapArray[0, 5] = 8;
                levelMap.mapArray[0, 6] = 3;
                levelMap.mapArray[0, 7] = 3;
                levelMap.mapArray[0, 8] = 3;
                levelMap.mapArray[1, 0] = 11;
                levelMap.mapArray[1, 1] = 11;
                levelMap.mapArray[1, 2] = 4;
                levelMap.mapArray[1, 3] = 7;
                levelMap.mapArray[1, 4] = 8;
                levelMap.mapArray[1, 5] = 8;
                levelMap.mapArray[1, 6] = 3;
                levelMap.mapArray[2, 0] = 9;
                levelMap.mapArray[2, 1] = 11;
                levelMap.mapArray[2, 2] = 4;
                levelMap.mapArray[2, 3] = 4;
                levelMap.mapArray[2, 4] = 2;
                levelMap.mapArray[2, 5] = 8;
                levelMap.mapArray[2, 6] = 8;
                levelMap.mapArray[3, 0] = 9;
                levelMap.mapArray[3, 1] = 11;
                levelMap.mapArray[3, 2] = 4;
                levelMap.mapArray[3, 3] = 1;
                levelMap.mapArray[3, 4] = 2;
                levelMap.mapArray[3, 5] = 2;
                levelMap.mapArray[3, 6] = 12;
                levelMap.mapArray[3, 7] = 12;
                levelMap.mapArray[4, 0] = 9;
                levelMap.mapArray[4, 1] = 9;
                levelMap.mapArray[4, 2] = 9;
                levelMap.mapArray[4, 3] = 1;
                levelMap.mapArray[4, 4] = 1;
                levelMap.mapArray[4, 5] = 2;
                levelMap.mapArray[4, 6] = 12;
                levelMap.mapArray[4, 7] = 12;
                levelMap.mapArray[4, 8] = 12;

                PuzzlePiece piece5 = new PuzzlePiece(5,5,true);
                inventoryPuzzlePieces.Add(piece5);
                PuzzlePiece piece6 = new PuzzlePiece(6, 6, true);
                inventoryPuzzlePieces.Add(piece6);
                PuzzlePiece piece10 = new PuzzlePiece(10, 10, true);
                inventoryPuzzlePieces.Add(piece10);



            }

            else if (levelNumber == 2)
            {
                bool[,] array = new bool[4, 4];
                for (int i = 0; i < 4; i++)
                {
                    for (int j = 0; j < 4; j++)
                    {
                        array[i, j] = false;
                    }

                }
                for (int i = 0; i < 3; i++)
                {
                    array[0, i] = true;
                    array[i, 2] = true;
                }

                hints = new List<Hint>();
                Hint hint = new Hint(9, 1, array, 6, 2);
                hints.Add(hint);
                puzzleList = new List<PuzzlePiece>();
                PuzzlePiece piece6;
                piece6 = new PuzzlePiece(6, 6, false);
                puzzleList.Add(piece6);

                PuzzlePiece piece2;
                piece2 = new PuzzlePiece(2, 2, false);
                puzzleList.Add(piece2);

                PuzzlePiece piece11;
                piece11 = new PuzzlePiece(11, 11, false);
                puzzleList.Add(piece11);

                PuzzlePiece piece5;
                piece5 = new PuzzlePiece(5, 5, false);
                puzzleList.Add(piece5);

                PuzzlePiece piece1;
                piece1 = new PuzzlePiece(1, 1, false);
                puzzleList.Add(piece1);

                PuzzlePiece piece8;
                piece8 = new PuzzlePiece(8, 8, false);
                puzzleList.Add(piece8);

                PuzzlePiece piece4;
                piece4 = new PuzzlePiece(4, 4, false);
                puzzleList.Add(piece4);

                PuzzlePiece piece12;
                piece12 = new PuzzlePiece(12, 12, false);
                puzzleList.Add(piece12);

                foreach (PuzzlePiece item in puzzleList)
                {
                    item.setIsInInventory(false);
                }

                levelMap = new Map(hints, puzzleList);
                levelMap.mapArray[0, 0] = 6;
                levelMap.mapArray[0, 1] = 6;
                levelMap.mapArray[0, 2] = 2;
                levelMap.mapArray[0, 3] = 2;
                levelMap.mapArray[0, 4] = 4;
                levelMap.mapArray[0, 5] = 4;
                levelMap.mapArray[0, 6] = 4;
                levelMap.mapArray[0, 7] = 12;
                levelMap.mapArray[0, 8] = 12;
                levelMap.mapArray[0, 9] = 12;
                levelMap.mapArray[1, 0] = 6;
                levelMap.mapArray[1, 1] = 2;
                levelMap.mapArray[1, 2] = 2;
                levelMap.mapArray[1, 3] = 8;
                levelMap.mapArray[1, 4] = 8;
                levelMap.mapArray[1, 5] = 4;
                levelMap.mapArray[1, 8] = 12;
                levelMap.mapArray[1, 9] = 12;
                levelMap.mapArray[2, 0] = 6;
                levelMap.mapArray[2, 1] = 6;
                levelMap.mapArray[2, 2] = 11;
                levelMap.mapArray[2, 3] = 11;
                levelMap.mapArray[2, 4] = 8;
                levelMap.mapArray[2, 5] = 8;
                levelMap.mapArray[3, 0] = 11;
                levelMap.mapArray[3, 1] = 11;
                levelMap.mapArray[3, 2] = 11;
                levelMap.mapArray[3, 3] = 5;
                levelMap.mapArray[3, 4] = 8;
                levelMap.mapArray[3, 5] = 1;
                levelMap.mapArray[4, 0] = 5;
                levelMap.mapArray[4, 1] = 5;
                levelMap.mapArray[4, 2] = 5;
                levelMap.mapArray[4, 3] = 5;
                levelMap.mapArray[4, 4] = 1;
                levelMap.mapArray[4, 5] = 1;


                PuzzlePiece piece3 = new PuzzlePiece(3, 3, true);
                inventoryPuzzlePieces.Add(piece3);
                PuzzlePiece piece7 = new PuzzlePiece(7, 7, true);
                inventoryPuzzlePieces.Add(piece7);
                PuzzlePiece piece9 = new PuzzlePiece(9, 9, true);
                inventoryPuzzlePieces.Add(piece9);
                PuzzlePiece piece10 = new PuzzlePiece(10, 10, true);
                inventoryPuzzlePieces.Add(piece10);
            }

            if (levelNumber == 3)
            {
                hints = new List<Hint>();
                bool[,] array = new bool[4, 4];

                array[0, 0] = true;

                for (int i = 0; i < 3; i++)
                {
                    array[1, i] = true;
                }

                Hint hint = new Hint(5, 1, array, 0, 3);
                hints.Add(hint);

                bool[,] array2 = new bool[4, 4];

                array2[0, 1] = true;
                array2[2, 1] = true;
                for (int i = 0; i < 2; i++)
                {
                    array2[i, 0] = true;
                }

                Hint hint2 = new Hint(6, 2, array2, 2, 1);
                hints.Add(hint2);

                puzzleList = new List<PuzzlePiece>();
                PuzzlePiece piece11;
                piece11 = new PuzzlePiece(11, 11, false);
                puzzleList.Add(piece11);

                PuzzlePiece piece1;
                piece1 = new PuzzlePiece(1, 1, false);
                puzzleList.Add(piece1);

                PuzzlePiece piece10;
                piece10 = new PuzzlePiece(10, 10, false);
                puzzleList.Add(piece10);

                PuzzlePiece piece7;
                piece7 = new PuzzlePiece(7, 7, false);
                puzzleList.Add(piece7);

                PuzzlePiece piece12;
                piece12 = new PuzzlePiece(12, 12, false);
                puzzleList.Add(piece12);

                foreach (PuzzlePiece item in puzzleList)
                {
                    item.setIsInInventory(false);
                }

                levelMap = new Map(hints, puzzleList);
                levelMap.mapArray[0, 0] = 11;
                levelMap.mapArray[0, 1] = 1;
                levelMap.mapArray[0, 2] = 1;
                levelMap.mapArray[0, 3] = 10;
                levelMap.mapArray[0, 4] = 10;
                levelMap.mapArray[0, 5] = 7;
                levelMap.mapArray[0, 6] = 7;
                levelMap.mapArray[0, 7] = 7;
                levelMap.mapArray[0, 8] = 7;
                levelMap.mapArray[0, 9] = 12;
                levelMap.mapArray[0, 10] = 12;
                levelMap.mapArray[1, 0] = 11;
                levelMap.mapArray[1, 1] = 1;
                levelMap.mapArray[1, 4] = 10;
                levelMap.mapArray[1, 5] = 10;
                levelMap.mapArray[1, 6] = 7;
                levelMap.mapArray[1, 8] = 12;
                levelMap.mapArray[1, 9] = 12;
                levelMap.mapArray[1, 10] = 12;
                levelMap.mapArray[2, 0] = 11;
                levelMap.mapArray[2, 1] = 11;
                levelMap.mapArray[2, 5] = 10;
                levelMap.mapArray[3, 1] = 11;

                PuzzlePiece piece3 = new PuzzlePiece(3, 3, true);
                inventoryPuzzlePieces.Add(piece3);
                PuzzlePiece piece2 = new PuzzlePiece(2, 2, true);
                inventoryPuzzlePieces.Add(piece2);
                PuzzlePiece piece4 = new PuzzlePiece(4, 4, true);
                inventoryPuzzlePieces.Add(piece4);
                PuzzlePiece piece5 = new PuzzlePiece(5, 5, true);
                inventoryPuzzlePieces.Add(piece5);
                PuzzlePiece piece6 = new PuzzlePiece(6, 6, true);
                inventoryPuzzlePieces.Add(piece6);
                PuzzlePiece piece9 = new PuzzlePiece(9, 9, true);
                inventoryPuzzlePieces.Add(piece9);
                PuzzlePiece piece8 = new PuzzlePiece(8, 8, true);
                inventoryPuzzlePieces.Add(piece8);

            }


        }

        public int[,] getMapArray()
        {
            int[,] mapArray = new int[5, 11];
            for (int i = 0; i < 11; i++)
            {
                for (int j = 0; j < 5; j++)
                {
                    mapArray[j, i] = levelMap.mapArray[j, i];
                }
            }
            return mapArray;
        }

        public Map getMap()
        {
            return levelMap;
        }
        public List<Hint> getHint()
        {
            return hints;
        }

        public List<PuzzlePiece> getInventoryPuzzlePieces()
        {
            return inventoryPuzzlePieces;
        }

    }
}
